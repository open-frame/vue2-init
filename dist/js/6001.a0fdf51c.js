"use strict";(self["webpackChunkiov_platform"]=self["webpackChunkiov_platform"]||[]).push([[6001,3399,8562,7504,5230,3495,2617,8758],{15230:function(e,t,a){a.r(t),a.d(t,{default:function(){return d}});var o=a(63598),l=function(){var e=this,t=e._self._c;return t("el-dialog",{attrs:{"close-on-click-modal":!1,title:"电量修正记录","append-to-body":!0,"modal-append-to-body":!1,visible:e.show,"show-close":!1}},[t(o.Z,{ref:"table",attrs:{name:"电量修正记录表",loading:e.tableLoading,total:e.total,data:e.tableData,"page-size":e.queryForm.pageSize,"current-page":e.queryForm.pageNum,derive:e.exporting},on:{"size-change":e.dataSizeChange,"current-change":e.handleCurrentChange},scopedSlots:e._u([{key:"columns",fn:function(){return[t("el-table-column",{attrs:{label:"原电量",prop:"originalElec","show-overflow-tooltip":""}}),t("el-table-column",{attrs:{label:"修正后电量",prop:"revisedElec","show-overflow-tooltip":""}}),t("el-table-column",{attrs:{label:"相差电量",prop:"diffElec","show-overflow-tooltip":""}}),t("el-table-column",{attrs:{label:"修改时间",prop:"updateTime","show-overflow-tooltip":""}}),t("el-table-column",{attrs:{label:"修改人",prop:"updateBy","show-overflow-tooltip":""}})]},proxy:!0}])}),t("span",{attrs:{slot:"footer"},slot:"footer"},[t("el-button",{attrs:{size:"mini",type:"primary"},on:{click:e.close}},[e._v("知道了")])],1)],1)},r=[],i=a(74713),s=a(30741),n={name:"",mixins:[s.oA],props:{show:{type:Boolean,default:!1},prepaidMeterId:{type:String,required:!0}},watch:{show(e){e&&this.prepaidMeterId&&(this.queryForm.prepaidMeterId=this.prepaidMeterId,this.getData())}},data(){return{tableLoading:!1,queryForm:{prepaidMeterId:"",pageSize:this.$tableDataSize,pageNum:1},tableData:[],total:0}},methods:{getData(){this.tableData=[],this.tableLoading=!0,(0,i.Ls)(this.queryForm).then((e=>{this.tableLoading=!1,0===e.code&&0===e.code&&(this.total=e.total,this.tableData=e.rows)})).catch((()=>{this.tableLoading=!1}))},async exporting(e){let t={...this.queryForm};"2"===e&&(t.pageSize=this.total,t.pageNum=1);const a=await(0,i.Ls)(t);if(0===a.code){const e=this.$refs.table.getColumns(),t=a.rows.map((t=>{let a=e.map((e=>[e.label,t[e.prop]]));return Object.fromEntries(a)}));return t}},close(){this.$emit("close",!1)}}},p=n,u=a(1001),c=(0,u.Z)(p,l,r,!1,null,"3ab57e70",null),d=c.exports}}]);